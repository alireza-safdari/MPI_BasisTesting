TEST 1
100 Processes = 1
n = 100, p = 1, pi = 3.1416009869231245, relative error = 2.65e-06, time (sec) =   0.0001
n = 100, p = 1, pi = 3.1416009869231245, relative error = 2.65e-06, time (sec) =   0.0001
n = 100, p = 1, pi = 3.1416009869231245, relative error = 2.65e-06, time (sec) =   0.0001
n = 100, p = 1, pi = 3.1416009869231245, relative error = 2.65e-06, time (sec) =   0.0001
n = 100, p = 1, pi = 3.1416009869231245, relative error = 2.65e-06, time (sec) =   0.0001
100 Processes = 64
n = 100, p = 64, pi = 3.1416009869231232, relative error = 2.65e-06, time (sec) =   0.0144
n = 100, p = 64, pi = 3.1416009869231232, relative error = 2.65e-06, time (sec) =   0.0126
n = 100, p = 64, pi = 3.1416009869231232, relative error = 2.65e-06, time (sec) =   0.0117
n = 100, p = 64, pi = 3.1416009869231232, relative error = 2.65e-06, time (sec) =   0.0113
n = 100, p = 64, pi = 3.1416009869231232, relative error = 2.65e-06, time (sec) =   0.0115
\n\n TEST 2
10000 Processes = 1
n = 10000, p = 1, pi = 3.1415926544231239, relative error = 2.65e-10, time (sec) =   0.0001
n = 10000, p = 1, pi = 3.1415926544231239, relative error = 2.65e-10, time (sec) =   0.0001
n = 10000, p = 1, pi = 3.1415926544231239, relative error = 2.65e-10, time (sec) =   0.0001
n = 10000, p = 1, pi = 3.1415926544231239, relative error = 2.65e-10, time (sec) =   0.0001
n = 10000, p = 1, pi = 3.1415926544231239, relative error = 2.65e-10, time (sec) =   0.0001
10000 Processes = 64
n = 10000, p = 64, pi = 3.1415926544231279, relative error = 2.65e-10, time (sec) =   0.0133
n = 10000, p = 64, pi = 3.1415926544231279, relative error = 2.65e-10, time (sec) =   0.0115
n = 10000, p = 64, pi = 3.1415926544231279, relative error = 2.65e-10, time (sec) =   0.0143
n = 10000, p = 64, pi = 3.1415926544231279, relative error = 2.65e-10, time (sec) =   0.0120
n = 10000, p = 64, pi = 3.1415926544231279, relative error = 2.65e-10, time (sec) =   0.0134
\n\n TEST 3
1000000 Processes = 1
n = 1000000, p = 1, pi = 3.1415926535899033, relative error = 3.51e-14, time (sec) =   0.0025
n = 1000000, p = 1, pi = 3.1415926535899033, relative error = 3.51e-14, time (sec) =   0.0026
n = 1000000, p = 1, pi = 3.1415926535899033, relative error = 3.51e-14, time (sec) =   0.0025
n = 1000000, p = 1, pi = 3.1415926535899033, relative error = 3.51e-14, time (sec) =   0.0025
n = 1000000, p = 1, pi = 3.1415926535899033, relative error = 3.51e-14, time (sec) =   0.0025
1000000 Processes = 64
n = 1000000, p = 64, pi = 3.1415926535898757, relative error = 2.63e-14, time (sec) =   0.0133
n = 1000000, p = 64, pi = 3.1415926535898757, relative error = 2.63e-14, time (sec) =   0.0115
n = 1000000, p = 64, pi = 3.1415926535898757, relative error = 2.63e-14, time (sec) =   0.0113
n = 1000000, p = 64, pi = 3.1415926535898757, relative error = 2.63e-14, time (sec) =   0.0133
n = 1000000, p = 64, pi = 3.1415926535898757, relative error = 2.63e-14, time (sec) =   0.0112
\n\n TEST 4
100000000 Processes = 1
n = 100000000, p = 1, pi = 3.1415926535902168, relative error = 1.35e-13, time (sec) =   0.2427
n = 100000000, p = 1, pi = 3.1415926535902168, relative error = 1.35e-13, time (sec) =   0.2427
n = 100000000, p = 1, pi = 3.1415926535902168, relative error = 1.35e-13, time (sec) =   0.2429
n = 100000000, p = 1, pi = 3.1415926535902168, relative error = 1.35e-13, time (sec) =   0.2427
n = 100000000, p = 1, pi = 3.1415926535902168, relative error = 1.35e-13, time (sec) =   0.2428
100000000 Processes = 64
n = 100000000, p = 64, pi = 3.1415926535897953, relative error = 7.07e-16, time (sec) =   0.0245
n = 100000000, p = 64, pi = 3.1415926535897953, relative error = 7.07e-16, time (sec) =   0.0155
n = 100000000, p = 64, pi = 3.1415926535897953, relative error = 7.07e-16, time (sec) =   0.0170
n = 100000000, p = 64, pi = 3.1415926535897953, relative error = 7.07e-16, time (sec) =   0.0172
n = 100000000, p = 64, pi = 3.1415926535897953, relative error = 7.07e-16, time (sec) =   0.0151

------------------------------------------------------------
Sender: LSF System <lsfadmin@nxt1319>
Subject: Job 12630922: <compute_pi_mpi> in cluster <Main_Compute> Done

Job <compute_pi_mpi> was submitted from host <login8> by user <alireza.safdari> in cluster <Main_Compute>.
Job was executed on host(s) <20*nxt1319>, in queue <mn_short>, as user <alireza.safdari> in cluster <Main_Compute>.
                            <20*nxt1451>
                            <20*nxt2028>
                            <4*nxt1930>
</home/alireza.safdari> was used as the home directory.
</scratch/user/alireza.safdari/HW_1> was used as the working directory.
Started at Sun Sep 13 12:53:58 2020
Results reported on Sun Sep 13 12:54:49 2020

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#BSUB -n 64 -R 'select[nxt] rusage[mem=150] span[ptile=20]' -M 150
#BSUB -J compute_pi_mpi -o output.%J -L /bin/bash -W 0:10
##
##NECESSARY JOB SPECIFICATIONS
##BSUB -J JobName             # Set the job name to "JobName"
##BSUB -L /bin/bash           # Uses the bash login shell to initialize the job's execution environment.
##BSUB -W hh:mm               # Sets job's runtime wall-clock limit in hours:minutes or just minutes (-mm)
##BSUB -n NNN                 # NNN: total number of cores/jobslots to allocate for the job
##BSUB -R "select[node-type]" # Select node-type: nxt, mem256gb, gpu, phi, mem1t, mem2t ...
##BSUB -R "span[ptile=XX]"    # XX:  number of cores/jobslots per node to use. Also, a node selection criterion.
##BSUB -R "rusage[mem=nnn]"   # Reserves nnn MBs per process/CPU for the job
##BSUB -M mm                  # Sets the per process enforceable memory limit to nnn MB
##BSUB -o OUTPUTFILE.%J       # Send stdout and stderr to "OUTPUTFILE.[jobID]"
#
# <--- at this point the current working directory is the one you submitted the job from.
#
module load intel/2017A       # load Intel software stack 
#
#
echo "TEST 1"
echo "100 Processes = 1"
mpirun -np 1 ./compute_pi_mpi.exe 100
mpirun -np 1 ./compute_pi_mpi.exe 100
mpirun -np 1 ./compute_pi_mpi.exe 100
mpirun -np 1 ./compute_pi_mpi.exe 100
mpirun -np 1 ./compute_pi_mpi.exe 100

echo "100 Processes = 64"
mpirun -np 64 ./compute_pi_mpi.exe 100
mpirun -np 64 ./compute_pi_mpi.exe 100
mpirun -np 64 ./compute_pi_mpi.exe 100
mpirun -np 64 ./compute_pi_mpi.exe 100
mpirun -np 64 ./compute_pi_mpi.exe 100


echo "\n\n TEST 2"
echo "10000 Processes = 1"
mpirun -np 1 ./compute_pi_mpi.exe 10000
mpirun -np 1 ./compute_pi_mpi.exe 10000
mpirun -np 1 ./compute_pi_mpi.exe 10000
mpirun -np 1 ./compute_pi_mpi.exe 10000
mpirun -np 1 ./compute_pi_mpi.exe 10000

echo "10000 Processes = 64"
mpirun -np 64 ./compute_pi_mpi.exe 10000
mpirun -np 64 ./compute_pi_mpi.exe 10000
mpirun -np 64 ./compute_pi_mpi.exe 10000
mpirun -np 64 ./compute_pi_mpi.exe 10000
mpirun -np 64 ./compute_pi_mpi.exe 10000


(... more ...)
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   186.00 sec.
    Max Memory :                                 572 MB
    Average Memory :                             23.80 MB
    Total Requested Memory :                     9600.00 MB
    Delta Memory :                               9028.00 MB
    Max Swap :                                   1 MB
    Max Processes :                              8
    Max Threads :                                10

The output (if any) is above this job summary.

